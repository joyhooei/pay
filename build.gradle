buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    
    dependencies {
        classpath 'org.ajoberstar:grgit:1.4.1'
    }
}

ext {

}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'eclipse'
    group = 'com.vrg.server'
    version = '2.0'
}

subprojects{
    apply plugin: 'java'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/milestone" }
    }

	task copyJars(type: Copy) {
	  from configurations.runtime
	  into 'dist'
	}

	task fatJar(type: Jar) {
		manifest {
			attributes 'Implementation-Title': 'Gradle Jar File Example',
			'Implementation-Version': version
		}
		baseName = project.name + '-all'
		from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
		with jar
	}
}

configure(subprojects.findAll{it.name.startsWith('channel')}){
    [compileJava, compileTestJava]*.options*.encoding = "UTF-8"

    eclipse{
        project.name="payserver-"+project.name.replace("/","-")
    }

    dependencies {
        compile(
            project(':payserver-common'),
            fileTree(dir: 'libs', include: '*.jar')
        )
        testCompile (
            'junit:junit:4.11',
            'org.powermock:powermock-core:1.5.6',
            'org.powermock:powermock-module-junit4:1.5.6',
            'org.powermock:powermock-api-mockito:1.5.6',
            'ch.qos.logback:logback-classic:1.1.2'
        )
    }

    jar {
        destinationDir = new File("${rootProject.projectDir}/payserver-core")
        from {
            fileTree(dir: "${project.projectDir}/libs", include: '*.jar').collect {
                it.isDirectory() ? it : zipTree(it) 
            } 
        }
    }
}